[Tests]
  [backandforth]
    issues = '#6'
    requirement = 'The system shall be able to transform a buffer from real space to reciprocal space and back and recover the original tensor'
    design = PerformFFT.md
    [even_1d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=1 Domain/nx=10'
      detail = 'in one dimension with an even number of grid cells'
      devices = 'cpu cuda mps'
    []
    [odd_1d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=1 Domain/nx=11'
      detail = 'in one dimension with an odd number of grid cells'
      devices = 'cpu cuda mps'
    []
    [even_2d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=2 Domain/nx=10 Domain/ny=8'
      detail = 'in two dimensions with an even number of grid cells'
      devices = 'cpu cuda mps'
    []
    [odd_2d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=2 Domain/nx=9 Domain/ny=11'
      detail = 'in two dimensions with an odd number of grid cells'
      devices = 'cpu cuda mps'
    []
    [even_3d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=3 Domain/nx=10 Domain/ny=8 Domain/nz=12'
      detail = 'in three dimensions with an even number of grid cells'
      devices = 'cpu cuda mps'
    []
    [odd_3d]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=3 Domain/nx=9 Domain/ny=13 Domain/nz=11'
      detail = 'in three dimensions with an odd number of grid cells'
      devices = 'cpu cuda mps'
    []

    [constants]
      type = CSVDiff
      input = backandforth.i
      csvdiff = backandforth_out.csv
      cli_args = 'Domain/dim=1 Domain/nx=10 Problem/scalar_constant_names="null zero" Problem/scalar_constant_values="0 0" TensorComputes/Initialize/zero/real=null TensorComputes/Initialize/zero/imaginary=zero'
      detail = ' throwing an error when encountering multiple undefined constants'
      devices = 'cpu'
    []
    [constant_1error]
      type = RunException
      input = backandforth.i
      expect_err = 'Constant null was requested but never declared'
      cli_args = 'Domain/dim=1 Domain/nx=10 TensorComputes/Initialize/zero/real=null'
      detail = ' throwing an error when encountering one undefined constant'
      devices = 'cpu'
    []
    [constant_2errors]
      type = RunException
      input = backandforth.i
      expect_err = 'Constants null, zero were requested but never declared'
      cli_args = 'Domain/dim=1 Domain/nx=10 TensorComputes/Initialize/zero/real=null TensorComputes/Initialize/zero/imaginary=zero'
      detail = ' throwing an error when encountering multiple undefined constants'
      devices = 'cpu'
    []
  []
  [rotating_grain_secant]
    type = HDF5Diff
    input = rotating_grain_secant.i
    hdf5diff = rotating_grain_secant.h5
    abs_tol = 1e-10
    issues = '#6'
    requirement = 'The system shall be able to solve a Swift-Hohenberg equation using a secant solve'
    design = SecantSolver.md
    devices = 'cpu cuda mps'
  []
[]
